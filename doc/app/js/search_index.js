var search_data = {"index":{"searchIndex":["analyst","applicationcontroller","applicationhelper","basicextractor","boerseextractor","dataminingerror","ebit","equity","homecontroller","homehelper","indiceshelper","invalidisinerror","onvistaextractor","onvistaquarterlyfiguresextractor","onvistavalueextractor","per","reaction","returnonequity","scorecard","scorecardscontroller","scorecardshelper","stockindex","stockindicescontroller","stockprocessor","util","add_millenium()","analyse()","average()","content_to_file()","create()","create()","current()","destroy()","destroy()","edit()","edit()","extract_index_value_on()","extract_reaction_on_figures()","extract_roe()","extract_roe()","extract_stock_name()","extract_stock_name()","extract_stock_price()","extract_stock_price()","extract_stock_value_on()","format()","format_date_time()","go()","go()","index()","index()","index()","information_expired()","isin_to_wkn()","l10n_f()","l10n_f_k()","last_work_day_before()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","open_sub_page()","perform_search()","performance()","read_files()","read_isin_from_file()","round()","show()","show()","step_back_in_time()","to_t()","update()","update()","readme_for_app"],"longSearchIndex":["analyst","applicationcontroller","applicationhelper","basicextractor","boerseextractor","dataminingerror","ebit","equity","homecontroller","homehelper","indiceshelper","invalidisinerror","onvistaextractor","onvistaquarterlyfiguresextractor","onvistavalueextractor","per","reaction","returnonequity","scorecard","scorecardscontroller","scorecardshelper","stockindex","stockindicescontroller","stockprocessor","util","util::add_millenium()","homecontroller#analyse()","per#average()","util::content_to_file()","scorecardscontroller#create()","stockindicescontroller#create()","per#current()","scorecardscontroller#destroy()","stockindicescontroller#destroy()","scorecardscontroller#edit()","stockindicescontroller#edit()","onvistavalueextractor#extract_index_value_on()","onvistaextractor#extract_reaction_on_figures()","boerseextractor#extract_roe()","onvistaextractor#extract_roe()","boerseextractor#extract_stock_name()","onvistaextractor#extract_stock_name()","boerseextractor#extract_stock_price()","onvistaextractor#extract_stock_price()","onvistavalueextractor#extract_stock_value_on()","util::format()","util::format_date_time()","onvistaquarterlyfiguresextractor#go()","stockprocessor#go()","homecontroller#index()","scorecardscontroller#index()","stockindicescontroller#index()","util::information_expired()","util::isin_to_wkn()","util::l10n_f()","util::l10n_f_k()","util::last_work_day_before()","basicextractor::new()","boerseextractor::new()","ebit::new()","equity::new()","onvistaextractor::new()","onvistaquarterlyfiguresextractor::new()","onvistavalueextractor::new()","per::new()","scorecardscontroller#new()","stockindicescontroller#new()","stockprocessor::new()","basicextractor#open_sub_page()","basicextractor#perform_search()","util::performance()","util::read_files()","util::read_isin_from_file()","util::round()","scorecardscontroller#show()","stockindicescontroller#show()","util::step_back_in_time()","util::to_t()","scorecardscontroller#update()","stockindicescontroller#update()",""],"info":[["Analyst","","Analyst.html","","<p>www.onvista.de/analysen/empfehlungen/isin/DE0007664039\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BasicExtractor","","BasicExtractor.html","","<p>Encapsulate the functionality all extractors have in common.\n"],["BoerseExtractor","","BoerseExtractor.html","","<p>This class has the capability to extract all information neccessary to\nevaluate a stock against the rules …\n"],["DataMiningError","","DataMiningError.html","","<p>This exceptions are thrown by data miners if none critical error occur and\nthe algorithm can recover …\n"],["Ebit","","Ebit.html","","<p>EBIT-Marge des letzten Jahres Setzt den Gewinnanteil ins Verhaeltnis zum\nUmsatz\n"],["Equity","","Equity.html","","<p>Equity Ratio last year Eigenkapitalquote im letzten Jahr\n"],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["IndicesHelper","","IndicesHelper.html","",""],["InvalidIsinError","","InvalidIsinError.html","","<p>This exception is thrown when a processed ISIN turns out as invalid\n"],["OnVistaExtractor","","OnVistaExtractor.html","","<p>This class has the capability to extract all information neccessary to\nevaluate a stock against the rules …\n"],["OnVistaQuarterlyFiguresExtractor","","OnVistaQuarterlyFiguresExtractor.html","","<p>Extracts the latest date and the reaction when quarterly figures were\nreleased for a given stock\n"],["OnVistaValueExtractor","","OnVistaValueExtractor.html","","<p>Extracts the value of a stock on a certain date\n"],["Per","","Per.html","","<p>Price-Earnings-Reation Kursgewinnverhältnis\n"],["Reaction","","Reaction.html","",""],["ReturnOnEquity","","ReturnOnEquity.html","","<p>Data object for Return on Equity (RoE) last year Eigenkapitalrendite des\nletzten Jahres- Lohn des Unternehmers …\n"],["ScoreCard","","ScoreCard.html","","<p>Contains all extracted data for a certain stock\n"],["ScoreCardsController","","ScoreCardsController.html","",""],["ScoreCardsHelper","","ScoreCardsHelper.html","",""],["StockIndex","","StockIndex.html","",""],["StockIndicesController","","StockIndicesController.html","",""],["StockProcessor","","StockProcessor.html","","<p>Algorithm for evaluating the 13 rules defined by Susan Levermann.\n<p>Thirteen figures are extracted and evaluated …\n"],["Util","","Util.html","","<p>Provides static support methods\n"],["add_millenium","Util","Util.html#method-c-add_millenium","(date)","<p>Ensures that the year part of a date consists of four digits: dd.MM.yy\n-&gt; dd.MM.yyyy\n"],["analyse","HomeController","HomeController.html#method-i-analyse","()",""],["average","Per","Per.html#method-i-average","()",""],["content_to_file","Util","Util.html#method-c-content_to_file","(content, file_name)","<p>Streams some content to a file (Mechanize::Page.body) If possible use\nMechanize::Page.save_as(file_name) …\n"],["create","ScoreCardsController","ScoreCardsController.html#method-i-create","()","<p>POST /score_cards POST /score_cards.json\n"],["create","StockIndicesController","StockIndicesController.html#method-i-create","()","<p>POST /indices POST /indices.json\n"],["current","Per","Per.html#method-i-current","()",""],["destroy","ScoreCardsController","ScoreCardsController.html#method-i-destroy","()","<p>DELETE /score_cards/1 DELETE /score_cards/1.json\n"],["destroy","StockIndicesController","StockIndicesController.html#method-i-destroy","()","<p>DELETE /indices/1 DELETE /indices/1.json\n"],["edit","ScoreCardsController","ScoreCardsController.html#method-i-edit","()","<p>GET /score_cards/1/edit\n"],["edit","StockIndicesController","StockIndicesController.html#method-i-edit","()","<p>GET /indices/1/edit\n"],["extract_index_value_on","OnVistaValueExtractor","OnVistaValueExtractor.html#method-i-extract_index_value_on","(historical_date)","<p>Extract the open and closeing values of an index\n"],["extract_reaction_on_figures","OnVistaExtractor","OnVistaExtractor.html#method-i-extract_reaction_on_figures","(index_isin)","<p>Extract the reaction on the release of quarterly figures\n"],["extract_roe","BoerseExtractor","BoerseExtractor.html#method-i-extract_roe","()","<p>Extract the Return on Equity (RoE) in German: Eigenkapitalrendite\n"],["extract_roe","OnVistaExtractor","OnVistaExtractor.html#method-i-extract_roe","()","<p>Extract the Return on Equity (RoE) in German: Eigenkapitalrendite\n"],["extract_stock_name","BoerseExtractor","BoerseExtractor.html#method-i-extract_stock_name","()","<p>Extract the name of the stock\n"],["extract_stock_name","OnVistaExtractor","OnVistaExtractor.html#method-i-extract_stock_name","()","<p>Extract the name of the stock\n"],["extract_stock_price","BoerseExtractor","BoerseExtractor.html#method-i-extract_stock_price","()","<p>Extract the current price of the stock\n"],["extract_stock_price","OnVistaExtractor","OnVistaExtractor.html#method-i-extract_stock_price","()","<p>Extract the current price of the stock\n"],["extract_stock_value_on","OnVistaValueExtractor","OnVistaValueExtractor.html#method-i-extract_stock_value_on","(historical_date)",""],["format","Util","Util.html#method-c-format","(date)","<p>Apply default date format\n"],["format_date_time","Util","Util.html#method-c-format_date_time","(date)","<p>Apply default date time format\n"],["go","OnVistaQuarterlyFiguresExtractor","OnVistaQuarterlyFiguresExtractor.html#method-i-go","()","<p>Extract the value of the stock when the quarterly figures were released\n"],["go","StockProcessor","StockProcessor.html#method-i-go","()","<p>Start the evaluation\n"],["index","HomeController","HomeController.html#method-i-index","()",""],["index","ScoreCardsController","ScoreCardsController.html#method-i-index","()","<p>GET /score_cards GET /score_cards.json\n"],["index","StockIndicesController","StockIndicesController.html#method-i-index","()","<p>GET /indices GET /indices.json\n"],["information_expired","Util","Util.html#method-c-information_expired","(date, threshold)","<p>Checks if a given information is older than a certain threshold (in\nseconds).\n"],["isin_to_wkn","Util","Util.html#method-c-isin_to_wkn","(isin)","<p>Extract the 6 digits that represent the WKN\n"],["l10n_f","Util","Util.html#method-c-l10n_f","(s)","<p>Convert a decimal separator from comma (,) to dot (.)\n"],["l10n_f_k","Util","Util.html#method-c-l10n_f_k","(value)","<p>Convert a string to a float like 7.108,27 -&gt; 7108.27 by eliminating the\nkilo separator and replacing …\n"],["last_work_day_before","Util","Util.html#method-c-last_work_day_before","(date)","<p>TODO we still need to handle public holiday\n"],["new","BasicExtractor","BasicExtractor.html#method-c-new","(extractor_url, isin)","<p>Set up the HTML pareser, load the web page of the extractor.\n"],["new","BoerseExtractor","BoerseExtractor.html#method-c-new","(isin)",""],["new","Ebit","Ebit.html#method-c-new","()",""],["new","Equity","Equity.html#method-c-new","()",""],["new","OnVistaExtractor","OnVistaExtractor.html#method-c-new","(isin)",""],["new","OnVistaQuarterlyFiguresExtractor","OnVistaQuarterlyFiguresExtractor.html#method-c-new","(agent, score_card, on_vista_stock_id, on_vista_index_id)","<p>Load the profile page for a certain stock with the internal onVista sock id\n"],["new","OnVistaValueExtractor","OnVistaValueExtractor.html#method-c-new","(agent, on_vista_id, on_vista_index_id)",""],["new","Per","Per.html#method-c-new","()",""],["new","ScoreCardsController","ScoreCardsController.html#method-i-new","()","<p>GET /score_cards/new GET /score_cards/new.json\n"],["new","StockIndicesController","StockIndicesController.html#method-i-new","()","<p>GET /indices/new GET /indices/new.json\n"],["new","StockProcessor","StockProcessor.html#method-c-new","(score_card)","<p>The supplied score_card is populated with the calculated figures.\n"],["open_sub_page","BasicExtractor","BasicExtractor.html#method-i-open_sub_page","(link_text, result_size, link_index)","<p>Open a sub page of the loaded stock by searching for a given link.\n<p><code>link_text</code> - the name of the link\n<p><code>result_size</code> ...\n"],["perform_search","BasicExtractor","BasicExtractor.html#method-i-perform_search","(isin, attribute, regexp, field_name, failure_msg)","<p>Search for a given ISIN.\n<p><code>isin</code> - the search pattern\n<p><code>attribute</code> - used xpath attribute to identify the search ...\n"],["performance","Util","Util.html#method-c-performance","(t2, t1)","<p>Calculates the performance between two values in percent  t2: value at the\nnewer date t1: value at the …\n"],["read_files","Util","Util.html#method-c-read_files","(file_pattern)","<p>Read ISIN - stock name pairs from several files (e.g. *.txt)\n"],["read_isin_from_file","Util","Util.html#method-c-read_isin_from_file","(file_name)","<p>Reads ISIN - stock name pairs from a text file\n"],["round","Util","Util.html#method-c-round","(value)","<p>Round the result, four digits precise\n"],["show","ScoreCardsController","ScoreCardsController.html#method-i-show","()","<p>GET /score_cards/1 GET /score_cards/1.json\n"],["show","StockIndicesController","StockIndicesController.html#method-i-show","()","<p>GET /indices/1 GET /indices/1.json\n"],["step_back_in_time","Util","Util.html#method-c-step_back_in_time","(days, date)","<p>Calculates a date in the past by subtracting a certain amount of days\n"],["to_t","Util","Util.html#method-c-to_t","(date)","<p>Convert a given date pattern like 28.01.1948 (dd.MM.yyyy) into a time\nobject.\n"],["update","ScoreCardsController","ScoreCardsController.html#method-i-update","()","<p>PUT /score_cards/1 PUT /score_cards/1.json\n"],["update","StockIndicesController","StockIndicesController.html#method-i-update","()","<p>PUT /indices/1 PUT /indices/1.json\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}